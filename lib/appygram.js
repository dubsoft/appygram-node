// Generated by CoffeeScript 1.3.3
(function() {
  var Appygram, Singleton, request,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Singleton = require('singleton');

  request = require('request');

  Appygram = (function(_super) {

    __extends(Appygram, _super);

    function Appygram() {
      this.api_key = void 0;
      this.format = 'json';
      this.endpoint = 'http://api.appygram.com';
      this.version = JSON.parse((require('fs')).readFileSync(__dirname + '/../package.json')).version;
    }

    Appygram.prototype.errorHandler = function(err, req, res, next) {
      if (this.api_key === void 0) {
        return console.err('Please define Appygram\'s API_KEY with appygram.api_key = \'your_api_key\' or appygram.setApiKey(\'your_api_key\')\
        \ If you need an API key please visit http://www.appygram.com/dashboard and request one for your project.');
      } else {
        return request.post(this.endpoint + '/feedback_messages', {
          api_key: this.api_key,
          "feedback_message[topic]": 'Exception',
          "feedback_message[message]": this.formatMessage(err),
          headers: {
            Accept: "application/json",
            "User-agent": "appygram-node/" + this.version
          }
        }, function(error, response, body) {
          return process.nextTick(function() {
            return next(err);
          });
        });
      }
    };

    Appygram.prototype.formatMessage = function(error) {
      switch (this.format) {
        case 'json':
          return JSON.stringify(error);
      }
    };

    return Appygram;

  })(Singleton);

  module.exports = Appygram.get();

}).call(this);
